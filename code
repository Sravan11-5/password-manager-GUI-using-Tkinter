import tkinter as tk
from tkinter import messagebox

class PasswordManagerGUI:
    def __init__(self, master):
        self.master = master
        self.master.title("Password Manager")

        self.label_service = tk.Label(master, text="Service:")
        self.label_service.grid(row=0, column=0, padx=10, pady=5)

        self.entry_service = tk.Entry(master)
        self.entry_service.grid(row=0, column=1, padx=10, pady=5)

        self.label_password = tk.Label(master, text="Password:")
        self.label_password.grid(row=1, column=0, padx=10, pady=5)

        self.entry_password = tk.Entry(master, show="*")
        self.entry_password.grid(row=1, column=1, padx=10, pady=5)

        self.button_save = tk.Button(master, text="Save", command=self.save_password)
        self.button_save.grid(row=2, column=0, columnspan=2, padx=10, pady=5, sticky="we")

        self.button_retrieve = tk.Button(master, text="Retrieve", command=self.retrieve_password)
        self.button_retrieve.grid(row=3, column=0, columnspan=2, padx=10, pady=5, sticky="we")

        self.button_modify = tk.Button(master, text="Modify", command=self.modify_password)
        self.button_modify.grid(row=4, column=0, columnspan=2, padx=10, pady=5, sticky="we")

        self.button_delete = tk.Button(master, text="Delete", command=self.delete_password)
        self.button_delete.grid(row=5, column=0, columnspan=2, padx=10, pady=5, sticky="we")

    def save_password(self):
        service = self.entry_service.get()
        password = self.entry_password.get()
        if not service:
            messagebox.showerror("Error", "Please enter a service.")
            return
        if not password:
            messagebox.showerror("Error", "Please enter a password.")
            return

        with open("passwords.txt", "a") as file:
            file.write(f"{service}: {password}\n")

        messagebox.showinfo("Password Saved", "Password saved successfully.")

        self.entry_service.delete(0, tk.END)
        self.entry_password.delete(0, tk.END)

    def retrieve_password(self):
        service = self.entry_service.get()
        if not service:
            messagebox.showerror("Error", "Please enter a service.")
            return

        found = False
        with open("passwords.txt", "r") as file:
            for line in file:
                stored_service, stored_password = line.strip().split(":")
                if stored_service == service:
                    found = True
                    messagebox.showinfo("Password Retrieved", f"Service: {service}\nPassword: {stored_password}")
                    break
        if not found:
            messagebox.showerror("Error", f"No password found for service '{service}'")

    def modify_password(self):
        service = self.entry_service.get()
        new_password = self.entry_password.get()
        if not service:
            messagebox.showerror("Error", "Please enter a service.")
            return

        updated_lines = []
        found = False
        with open("passwords.txt", "r") as file:
            for line in file:
                stored_service, stored_password = line.strip().split(":")
                if stored_service == service:
                    found = True
                    if not new_password:
                        messagebox.showerror("Error", "Please enter a new password.")
                        return
                    updated_lines.append(f"{service}: {new_password}\n")
                else:
                    updated_lines.append(line)
        if not found:
            messagebox.showerror("Error", f"No password found for service '{service}'")
            return

        with open("passwords.txt", "w") as file:
            file.writelines(updated_lines)
        messagebox.showinfo("Password Modified", f"Password for service '{service}' modified successfully.")

    def delete_password(self):
        service = self.entry_service.get()
        if not service:
            messagebox.showerror("Error", "Please enter a service.")
            return

        updated_lines = []
        found = False
        with open("passwords.txt", "r") as file:
            for line in file:
                stored_service, _ = line.strip().split(":")
                if stored_service == service:
                    found = True
                else:
                    updated_lines.append(line)
        if not found:
            messagebox.showerror("Error", f"No password found for service '{service}'")
            return

        with open("passwords.txt", "w") as file:
            file.writelines(updated_lines)
        messagebox.showinfo("Password Deleted", f"Password for service '{service}' deleted successfully.")

        self.entry_service.delete(0, tk.END)
        self.entry_password.delete(0, tk.END)

def main():
    root = tk.Tk()
    app = PasswordManagerGUI(root)
    root.mainloop()

if __name__ == "__main__":
    main()
